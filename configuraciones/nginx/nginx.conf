
#user ruben;
worker_processes  1;
#user ruben;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;

    #ruben
    accept_mutex off;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    upstream app_server {
	    server 127.0.0.1:8000 fail_timeout=0;    	
	    #server 127.0.0.1:9001 fail_timeout=0;
    }

    upstream service_two{
	    server 127.0.0.1:7000 fail_timeout=0;
    }

    upstream service_three{
	    server 127.0.0.1:9000 fail_timeout=0;
    }

    upstream service_four {
	    server 127.0.0.1:6000 fail_timeout=0;
    }

    upstream service_suma {
	    server 127.0.0.1:6001 fail_timeout=0;
    }

    upstream service_resta{
	    server 127.0.0.1:6002 fail_timeout=0;
    }


    server {
        listen       80;
        server_name  service_one.localhost.com;
	allow 192.168.0.104;

	#ruben
	client_max_body_size 4G;

        location / {
	    #rewrite ^/service(.*) $1 break;
            #root   /usr/share/nginx/html;
            #index  index.html index.htm;
	    
	    #ruben proxy reverse
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    proxy_set_header Host $http_host;
	    proxy_redirect off;
	    proxy_pass http://app_server;

        }

	location /service2 {
		#rewrite ^/service(.*) /$1 break;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_redirect off;
		proxy_pass http://service_two;
	}

	location /service3 {
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header  Host $http_host;
		proxy_redirect off;
		proxy_pass http://service_three;
	}
	
	location /service4 {
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_redirect off;
		proxy_pass http://service_four;
	}

	location /suma {
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_redirect off;
		proxy_pass http://service_suma;
	}

	location /resta {
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_redirect off;
		proxy_pass http://service_resta;
	}


        #error_page  404              /404.html;
        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }

    #server {
	    #listen 80;
	    #server_name service_two.localhost.com;
	    #allow 192.168.0.104;
	    #client_max_body_size 4G;

	    #location /ser {
		    ##rewrite ^/service(.*) $1 break;
		    #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		    #proxy_set_header Host $http_host;
		    #proxy_redirect off;
		    #proxy_pass http://service_two;
	    #}
	    #error_page 500 502 503 504 /50x.html;
	    #location = /50.html {
		    #root /usr/share/nginx/html;
	    #}
    #}


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
